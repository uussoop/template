name: Go CI / Coverage

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  default_deploy_path: /home/ubuntu/senpai
  default_deploy_user: ubuntu
  default_deploy_port: 22

jobs:
  docker-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-node@master
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install cosign
      if: github.event_name != 'pull_request'
      uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6
      with:
        cosign-release: "v1.13.1"
    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf
    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GH_TOKEN }}
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
    - name: Build and push the docker image on ghcr.io
      id: build-and-push
      uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Sign the published Docker image
      if: ${{ github.event_name != 'pull_request' }}
      env:
        COSIGN_EXPERIMENTAL: "true"
      run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}